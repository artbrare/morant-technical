library(vroom)
library(tidyverse)
injuries <- vroom::vroom("data/injuries.tsv.gz")
products <- vroom::vroom("data/products.tsv")
library(vroom)
library(tidyverse)
injuries <- vroom::vroom("data/injuries.tsv.gz")
setwd("~/Documents/Technical tests/morant/Pregunta-5")
injuries <- vroom::vroom("data/injuries.tsv.gz")
injuries <- vroom::vroom("data/injuries.tsv")
injuries
products <- vroom::vroom("data/products.tsv")
products
population <- vroom::vroom("data/population.tsv")
population
injuries
library(vroom)
library(tidyverse)
library(vroom)
library(tidyverse)
injuries <- vroom::vroom("data/injuries.tsv")
injuries
products <- vroom::vroom("products.tsv")
products
population <- vroom::vroom("population.tsv")
population
selected <- injuries %>% filter(prod_code == 649)
nrow(selected)
selected %>%
count(location, wt = weight, sort = TRUE)
selected %>%
count(body_part, wt = weight, sort = TRUE)
selected %>%
count(diag, wt = weight, sort = TRUE)
summary <- selected %>%
count(age, sex, wt = weight)
summary
summary %>%
ggplot(aes(age, n, colour = sex)) +
geom_line() +
labs(y = "Número estimado de lesiones")
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary %>%
ggplot(aes(age, rate, colour = sex)) +
geom_line(na.rm = TRUE) +
labs(y = "Lesiones por cada 10.000 personas")
injuries <- vroom::vroom("/injuries.tsv")
injuries
injuries <- vroom::vroom("/injuries.tsv")
injuries <- vroom::vroom("injuries.tsv")
injuries
products <- vroom::vroom("products.tsv")
products
population <- vroom::vroom("population.tsv")
population
selected <- injuries %>% filter(prod_code == 649)
nrow(selected)
selected %>%
count(location, wt = weight, sort = TRUE)
selected %>%
count(body_part, wt = weight, sort = TRUE)
selected %>%
count(diag, wt = weight, sort = TRUE)
summary <- selected %>%
count(age, sex, wt = weight)
summary
summary %>%
ggplot(aes(age, n, colour = sex)) +
geom_line() +
labs(y = "Número estimado de lesiones")
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary %>%
ggplot(aes(age, rate, colour = sex)) +
geom_line(na.rm = TRUE) +
labs(y = "Lesiones por cada 10.000 personas")
injuries <- vroom::vroom("injuries.tsv")
source("~/Documents/Technical tests/morant/Pregunta-5/eda.R")
source("~/Documents/Technical tests/morant/Pregunta-5/eda.R")
source("~/Documents/Technical tests/morant/Pregunta-5/eda.R")
source("~/Documents/Technical tests/morant/Pregunta-5/eda.R")
injuries <- vroom::vroom("injuries.tsv")
library(vroom)
library(tidyverse)
injuries <- vroom::vroom("injuries.tsv")
injuries
products <- vroom::vroom("products.tsv")
products
population <- vroom::vroom("population.tsv")
population
selected <- injuries %>% filter(prod_code == 649)
nrow(selected)
selected %>%
count(location, wt = weight, sort = TRUE)
selected %>%
count(location, wt = weight, sort = TRUE)
selected %>%
count(location, wt = weight, sort = TRUE)
selected %>%
count(diag, wt = weight, sort = TRUE)
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary <- selected %>%
count(age, sex, wt = weight)
selected <- injuries %>% filter(prod_code == 649)
population <- vroom::vroom("population.tsv")
population
selected <- injuries %>% filter(prod_code == 649)
nrow(selected)
selected %>%
count(location, wt = weight, sort = TRUE)
selected %>%
count(body_part, wt = weight, sort = TRUE)
selected %>%
count(diag, wt = weight, sort = TRUE)
summary <- selected %>%
count(age, sex, wt = weight)
summary
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary <- selected %>%
count(age, sex, wt = weight)
summary
summary %>%
ggplot(aes(age, n, colour = sex)) +
geom_line() +
labs(y = "Número estimado de lesiones")
summary
summary %>%
ggplot(aes(age, rate, colour = sex)) +
geom_line(na.rm = TRUE) +
labs(y = "Lesiones por cada 10.000 personas")
summary %>%
ggplot(aes(age, rate, colour = sex)) +
geom_line(na.rm = TRUE) +
labs(y = "Lesiones por cada 10.000 personas")
library(tidyverse)
injuries <- vroom::vroom("injuries.tsv")
injuries
products <- vroom::vroom("products.tsv")
products
population <- vroom::vroom("population.tsv")
population
selected <- injuries %>% filter(prod_code == 649)
nrow(selected)
selected %>%
count(location, wt = weight, sort = TRUE)
selected %>%
count(body_part, wt = weight, sort = TRUE)
selected %>%
count(diag, wt = weight, sort = TRUE)
summary <- selected %>%
count(age, sex, wt = weight)
summary
summary %>%
ggplot(aes(age, n, colour = sex)) +
geom_line() +
labs(y = "Número estimado de lesiones")
summary <- selected %>%
count(age, sex, wt = weight) %>%
left_join(population, by = c("age", "sex")) %>%
mutate(rate = n / population * 1e4)
summary
summary %>%
ggplot(aes(age, rate, colour = sex)) +
geom_line(na.rm = TRUE) +
labs(y = "Lesiones por cada 10.000 personas")
shiny::runApp()
